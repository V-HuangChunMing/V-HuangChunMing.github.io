<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/UndergraduateCourse/2021-07-08-GIT/"/>
      <url>/2023/07/12/Article/UndergraduateCourse/2021-07-08-GIT/</url>
      
        <content type="html"><![CDATA[<p>参考资料</p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><p>PUSH：上传到服务器</p><p>PULL：下载到本地</p><p>revisiom：差异记录</p><p>提交信息：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第1行：提交修改内容的摘要</span><br><span class="line">第2行：空行</span><br><span class="line">第3行以后：修改的理由</span><br></pre></td></tr></tbody></table></figure><h2 id="安装msysgit"><a href="#安装msysgit" class="headerlink" title="安装msysgit"></a>安装msysgit</h2><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/Robotic/README/"/>
      <url>/2023/07/12/Article/Robotic/README/</url>
      
        <content type="html"><![CDATA[<h1 id="V-HuangChunMing-github-io"><a href="#V-HuangChunMing-github-io" class="headerlink" title="V-HuangChunMing.github.io"></a>V-HuangChunMing.github.io</h1><p>WebSite</p><p> <a href="#H2_TIPS">一、TIPS </a></p><h2 id="一、TIPS"><a href="#一、TIPS" class="headerlink" title=" 一、TIPS "></a><span id="H2_TIPS"> 一、TIPS </span></h2><ol><li><p>问题:在网址中输入目标网址后,是404,不是该目录下的index.html.<br><br>解决:在package.json下指定main<br><br><code> { "main": "index.js"}</code></p></li><li><p><a href="https://www.internetingishard.com/">学习网址:Interneting Is hard</a></p></li><li><p><code>&lt;!DOCTYPE html&gt;</code> 声明不是一个 HTML 标签；它是用来告知 Web 浏览器页面使用了哪种 HTML 版本。</p></li><li><p><code>&lt;head&gt;&lt;/head&gt;</code>标签里面记录,用户的不可见内容,比如pagetitle,cssLink.<code>&lt;body&gt;&lt;/body&gt;</code>标签里面放大部分的内容和可见内容.</p></li><li><p>保存自动刷新是<code>webpack</code>的功能</p></li><li><p>HTML 将连续的空格、制表符或换行符（统称为“空白”）压缩为一个空格</p></li><li><p><code>&lt;br/&gt;</code>换行,<code>&lt;hr/&gt;</code>元素是一个“水平规则”，它代表了一个主题中断。所有空 HTML 元素中的尾部斜杠 ( /) 完全是可选的。</p></li><li><p>Absolute、Relative、Root-Relative Links</p></li><li><p>四种主要的图像格式</p><ol><li>JPG: 图像设计用于处理大型调色板，而不会过度增加文件大小。这使得它们非常适合包含大量渐变的照片和图像。另一方面，JPG 不允许透明像素</li><li>GIF: 是简单动画的首选，但要权衡的是它们在调色板方面有些限制——永远不要将它们用于照片。透明像素是 GIF 的二元选项，这意味着您不能使用半透明像素。这会使在透明背景上获得高层次的细节变得困难。因此，如果您不需要动画，通常最好使用 PNG 图像。</li><li>PNG:非常适合任何不是照片或动画的东西。对于照片，相同质量（人眼感知）的 PNG 文件通常比等效的 JPG 文件大。但是，它们确实可以很好地处理不透明度，并且没有调色板限制。这使得它们非常适合图标、技术图表、徽标</li><li>SVG: 是一种基于矢量的图形格式，这意味着它可以放大或缩小到任何尺寸而不会损失质量。此属性使 SVG 图像成为响应式设计的绝佳工具。它们适用于几乎所有与 PNG 相同的用例，您应该尽可能使用它们。</li></ol></li><li><p><code>&lt;img url='' alt='' height='' width=''&gt;</code> </p></li><li><p><code>&lt;html lang='en'&gt;</code></p></li><li><p><code>&lt;meta charset='UTF-8'/&gt;</code></p></li><li><p>reserved characters</p></li><li><p><code>&lt;link rel='' href='' /&gt;</code>:只能在<code>&lt;head&gt;</code>中,<code>rel</code>属性定义了资源和html文档之间的关系,<code>href</code>与<code>&lt;a&gt;</code>中的表示一个链接,不过此处应当指向一个.css</p></li><li><p>css最常见的度量单位为<code>px</code>和<code>em</code>:前者是你直观地称之为像素的东西，不管用户是否有视网膜显示器，后者是相关元素的当前字体大小。</p></li><li><p><code>font-family</code>:是另一个内置的 CSS 属性，它为您选择的任何元素定义字体。它接受多个值，因为并非所有用户都会安装相同的字体。使用上面的代码片段，浏览器尝试首先加载最左边的 ( )，如果用户没有它，则Helvetica回退到，最后选择系统的默认无衬线字体。Arial</p></li><li><p>每个网页的 CSS 层次结构如下所示：</p><ul><li>浏览器的默认样式表</li><li>用户定义的样式表</li><li>外部样式表（就是我们）</li><li>页面特定样式（这也是我们）</li><li>内联样式（可能是我们，但绝不应该是）</li></ul></li><li><p><code>&lt;link&gt;</code>可以向同一页面添加多个元素,css规则可以分布在多个外部样式表中,顺序很重要,后出现的会覆盖先出现的</p></li><li><p>块和内联框:</p><ul><li>块:总是出现在前一个块元素的下方。这是 HTML 文档在 Web 浏览器呈现时的“自然”或“静态”流程</li><li>块:的宽度是根据其父容器的宽度自动设置的。在这种情况下，我们的块总是浏览器窗口的宽度</li><li>块:的默认高度基于它包含的内容。当您缩小浏览器窗口时，它 <code>&lt;h1&gt;</code>会分成两行，并相应调整其高度</li><li>内联框:不影响垂直间距。它们不是用来确定布局的——它们是用来设计块内的东西的.</li><li>宽度取决于它包含的内容，而不是父元素的宽度。</li></ul></li><li><p><code>&lt;img/&gt;</code>和<code>&lt;a&gt;</code>都是内联框</p></li><li><p>The “CSS box model” is a set of rules that determine the dimensions of every element in a web page. It gives each box (both inline and block) four properties:</p><ul><li>Content – The text, image, or other media content in the element.</li><li>Padding – The space between the box’s content and its border.</li><li>Border – The line between the box’s padding and margin.</li><li>Margin – The space between the box and surrounding boxes.</li></ul></li><li><p>padding速记格式:<img src="https://www.internetingishard.com/html-and-css/css-box-model/padding-shortform-two-values-a7ed4c.png" display="block"><img src="https://www.internetingishard.com/html-and-css/css-box-model/padding-shortform-four-values-93c021.png" display="block"></p></li><li><p>border:<img src="https://www.internetingishard.com/html-and-css/css-box-model/css-border-syntax-d8ba17.png" display="block"></p></li><li><p>内联框:调整padding不会撑大block的padding</p></li><li><p>border垂直边距折叠,要防止边距折叠可以放一个不可见元素来处理<code>&lt;div style='padding-top: 1px'&gt;&lt;/div&gt;</code></p></li><li><p>width和height属性仅定义框内容的大小</p></li><li><p>CSS选择器:类选择器、后代选择器、伪类和ID选择器</p></li><li><p>链接伪类</p></li></ol><ul><li>link– 用户从未访问过的链接。</li><li>visited– 用户之前访问过的链接。</li><li>hover– 用户鼠标悬停的链接。</li><li>active– 被鼠标（或手指）按下的链接。</li></ul><ol start="30"><li>选择起的特殊性从大到`小</li></ol><ul><li>#button-2</li><li>.button:link</li><li>a:link和.synopsis em（他们是平等的）</li><li>.button</li><li>a</li></ul><ol start="31"><li>sidebar layout, a fixed-width layout, a full-bleed layout</li><li>flex containers、flex items</li><li>水平对齐、跨轴（垂直）对齐</li><li>flex container order、flex item order、flex item alignment、flexble items、flex items and auto-margins</li><li><ul><li>Use display: flex; to create a flex container.<br></li><li>Use justify-content to define the horizontal alignment of items.<br></li><li>Use align-items to define the vertical alignment of items.<br></li><li>Use flex-direction if you need columns instead of rows.<br></li><li>Use the row-reverse or column-reverse values to flip item order.<br>  </li><li>Use order to customize the order of individual elements.<br></li><li>Use align-self to vertically align individual items.<br></li><li>Use flex to create flexible boxes that can stretch and shrink. <br></li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter7/styles/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter7/styles/</url>
      
        <content type="html"><![CDATA[* {  margin: 0;  padding: 0;  box-sizing: border-box;}.menu-container {  color: #fff;  background-color: #5995DA;  /* Blue */  padding: 20px 0;  display: flex;  justify-content: center;    /* Add this */}.menu {  border: 1px solid #fff;  /* For debugging */  width: 900px;  display: flex;  justify-content:  space-between;}.links {  border: 1px solid #fff;  /* For debugging */  display: flex;  justify-content: flex-end;}.login {  margin-left: 20px;}.header-container {  color: #5995DA;  background-color: #D6E9FE;  display: flex;  justify-content: center;}.header {  width: 900px;  height: 300px;  display: flex;  justify-content: space-between;    align-items: center;  /* Add this */}.photo-grid-container {  display: flex;  justify-content: center;}.photo-grid {  width: 900px;  display: flex;  justify-content: flex-start;  flex-direction: column;  align-items: center;  }/* .photo-grid {  width: 900px;  display: flex;  justify-content: center;  flex-wrap: wrap;  flex-direction: row-reverse;   align-items: center;} *//* .photo-grid {  flex-direction: row;    align-items: center;}.first-item {  order: 1;}.last-item {  order: -1;} */.photo-grid-item {  border: 1px solid #fff;  width: 300px;  height: 300px;}]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter7/flexbox/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter7/flexbox/</url>
      
        <content type="html"><![CDATA[  <div class="menu-container">    <div class="menu">      <div class="date">Aug 14, 2016</div>      <div class="links">        <div class="signup">Sign Up</div> <!-- This is nested now -->        <div class="login">Login</div> <!-- This one too! -->      </div>    </div>  </div>  <div class="header-container">    <div class="header">      <div class="subscribe">Subscribe ▾</div>      <div class="logo"><img src="images/awesome-logo.svg"></div>      <div class="social"><img src="images/social-icons.svg"></div>    </div>  </div>  <div class="photo-grid-container">    <div class="photo-grid">      <div class="photo-grid-item first-item">        <img src="images/one.svg">      </div>      <div class="photo-grid-item">        <img src="images/two.svg">      </div>      <div class="photo-grid-item">        <img src="images/three.svg">      </div>      <div class="photo-grid-item">        <img src="images/four.svg">      </div>      <div class="photo-grid-item last-item">        <img src="images/five.svg">      </div>    </div>  </div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter6/styles/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter6/styles/</url>
      
        <content type="html"><![CDATA[* {  margin: 0;  padding: 0;  box-sizing: border-box;}.menu {  height: 100px;  background-color: #B2D6FF;    /* Medium blue */}.sidebar {  float: right;                  /* Add this */  width: 200px;       height: 300px;  background-color: #F09A9D;    /* Red */}.content {  float: left;                  /* Add this */  width: 650px;                 /* Add this */  height: 500px;  background-color: #F5CF8E;    /* Yellow */}.footer {  overflow: hidden;  /* height: 200px; */  background-color: #D6E9FE;    /* Light blue */}.page {  width: 900px;  margin: 0 auto;}.container {  overflow: hidden;  background-color: #EAEDF0;}.column {  float: left;  width: 31%;  margin: 20px 1.15%;  height: 160px;  background-color: #B2D6FF;    /* Medium blue */}.content {  padding: 20px;}.article-image {  float: left;  width: 300px;  height: 200px;  margin-right: 20px;  margin-bottom: 20px;}p {  margin-bottom: 20px;}.avatar {  float: left;  width: 60px;  height: 60px;  margin: 25px;  border-radius: 40px;  background-color: #D6E9FE;}.username {  margin-top: 30px;}.comment {  margin: 10px;  overflow: hidden;     /* This is important */}]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter6/floats/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter6/floats/</url>
      
        <content type="html"><![CDATA[  <div class="menu">Menu</div>  <div class="container">    <div class="page">      <div class="sidebar"></div>      <div class="content">        <img src="?" class="article-image">        <p>Ad netus sagittis velit orci est non ut urna taciti metus donec magnis          hendrerit adipiscing mauris sit a proin ultrices nibh.</p>        <p>Enim suspendisse ac scelerisque nascetur vestibulum parturient sed mi a          dolor eu non adipiscing non neque scelerisque netus ullamcorper sed          parturient integer.Eros dui risus non sodales ullamcorper libero a dis          cubilia a orci iaculis cursus.</p>        <p>Egestas at aliquam a egestas accumsan cum elementum consectetur conubia          tristique eu et vitae condimentum in ante consectetur suscipit a a duis          vestibulum gravida morbi sagittis.Parturient scelerisque facilisis          ullamcorper a a pretium a nisl parturient semper senectus accumsan ipsum          mus scelerisque eget ridiculus.Accumsan dolor a.</p>        <p>Ligula taciti vel primis sit a tincidunt habitant parturient parturient          in parturient ante nulla consectetur sem.Facilisis parturient litora.</p>      </div>    </div>  </div>  <div class="footer">    <div class="column">      <div class="avatar"></div>      <h3 class="username">Bob Smith</h3>      <p class="comment">Aptent vel egestas vestibulum aliquam ullamcorper volutpat        ullamcorper pharetra hac posuere a rhoncus purus molestie torquent. Scelerisque        purus cursus dictum ornare a phasellus. A augue venenatis adipiscing.</p>    </div>    <div class="column"></div>    <div class="column"></div>    <div class="column"></div>    <div class="column"></div>    <div class="column"></div>  </div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter5/styles/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter5/styles/</url>
      
        <content type="html"><![CDATA[.synopsis {  color: #7E8184;        /* Light gray */  font-style: italic;}.synopsis em {  font-style: normal;}.button {  color: #FFF;  background-color: #5995DA;    /* Blue */  font-weight: bold;  padding: 20px;  text-align: center;  border: 2px solid #5D6063;    /* Dark gray */  border-radius: 5px;  width: 200px;  margin: 20px auto;}.page {  width: 600px;  margin: 0 auto;}.call-to-action {  font-style: italic;  background-color: #EEB75A;    /* Yellow */}a:link {  color: blue;  text-decoration: none;}a:visited {  color: purple;}a:hover {  color: aqua;  text-decoration: underline;}a:active {  color: red;}a:visited:hover {  color: orange;}a:visited:active {  color: red;}]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter5/selectors/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter5/selectors/</url>
      
        <content type="html"><![CDATA[  <div class="page">    <!-- Add this -->    <h1>CSS Selectors</h1>    <p class="synopsis">CSS selectors let you <em>select</em> individual HTML elements in an HTML      document. This is <strong>super</strong> useful.</p>    <p>Classes are ridiculously important, since they allow you to select      arbitrary boxes in your web pages.</p>    <p>We’ll also be talking about links in this example, so here’s      <a href="https://internetingishard.com">Interneting Is Hard</a> for us to      style.    </p>    <div class="button">Button One</div>    <div class="button call-to-action">Button Two</div>  </div>&gt;]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter4/boxes/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter4/boxes/</url>
      
        <content type="html"><![CDATA[  <h1>Headings Are Block Elements</h1>  <p>Paragraphs are blocks, too. <em>However</em>, &lt;em&gt; and &lt;strong&gt;    elements are not. They are <strong>inline</strong> elements.</p>  <p>Block elements define the flow of the HTML document, while inline elements    do not.</p><div>Button</div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter4/box-styles/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter4/box-styles/</url>
      
        <content type="html"><![CDATA[* {  margin: 0;  padding: 0;  box-sizing: border-box;}h1, p {  background-color: #DDE0E3;    /* Light gray */}em, strong {  background-color: #B2D6FF;    /* Light blue */  display: inline;}h1 {  padding: 50px;  border-bottom: 1px solid #5D6063;}p {  padding-top: 20px;  padding-bottom: 20px;  padding-left: 10px;  padding-right: 10px;}p {  padding: 20px 10px;  /* Vertical  Horizontal */  margin-bottom: 50px;          /* Add this */}strong {  margin: 50px;}div {  color: #FFF;  background-color: #4A90E2;  font-weight: bold;  padding: 20px;  text-align: center;  width: 200px;  box-sizing: border-box;  margin: 20px auto; /* Vertical  Horizontal */}div {  /* [Existing Declarations] */  width: 200px;}/* body {  text-align: center;} */]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter3/styles/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter3/styles/</url>
      
        <content type="html"><![CDATA[body {  color: #414141;    /* Dark gray */  background-color: #EEEEEE;    /* Light gray */}h1 {  font-size: 2em;}h2 {  font-size: 1.6em;}h1, h2, h3, h4, h5, h6 {  font-family: "Helvetica", "Arial", sans-serif;  font-weight: normal;            }ul {  list-style-type: circle;}ol {  list-style-type: lower-roman;}a {  text-decoration: none;}p {  text-align: left;}]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter3/dummy/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter3/dummy/</url>
      
        <content type="html"><![CDATA[  <h1>Dummy</h1>  <p>This is a dummy page that helps us demonstrate reusable CSS    stylesheets. <a href="hello-css.html">Go back</a>.</p>  <p>Want to try crossing out an <a href="nowhere.html" style="color: #990000; text-decoration: line-through;">obsolete      link</a>?    This is your chance!</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter3/hello-css/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter3/hello-css/</url>
      
        <content type="html"><![CDATA[  <h1>Hello, CSS</h1>  <p>CSS lets us style HTML elements. There’s also    <a href="dummy.html">another page</a> associated with this example.  </p>  <h2>List Styles</h2>  <p>You can style unordered lists with the following bullets:</p>  <ul>    <li>disc</li>    <li>circle</li>    <li>square</li>  </ul>  <p>And you can number ordered lists with the following:</p>  <ol>    <li>decimal</li>    <li>lower-roman</li>    <li>upper-roman</li>    <li>lower-alpha</li>    <li>upper-alpha</li>    <li>(and many more!)</li>  </ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter2/misc/extras/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter2/misc/extras/</url>
      
        <content type="html"><![CDATA[  <h1>Extras</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter2/links/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter2/links/</url>
      
        <content type="html"><![CDATA[  <h1>Links</h1>  <p>This particular page is about links! There are three kinds of links:</p>  <ul>    <!-- Add <li> elements here -->    <li>Absolute links, like to      <a href="https://developer.mozilla.org/en-US/docs/Web/HTML">Mozilla        Developer Network</a>, which is a very good resource for web      developers.    </li>    <li>Relative links, like to our <a href="misc/extras.html">extras        page</a>.    </li>    <li>Absolute links, like to      <a href="https://developer.mozilla.org/en-US/docs/Web/HTML" target="_blank">Mozilla Developer Network</a>, which      is a very good resource for web developers.    </li>  </ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter2/images/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter2/images/</url>
      
        <content type="html"><![CDATA[  <h1>IMAGES</h1>  <p>This page covers common image formats, but you may also be looking for <a href="links.html">links</a> and <a href="misc/extras.html">useful      extras</a>.</p>  <h2>JPGs</h2>  <p>JPG images are good for photos.</p>  <img src="images/mochi.jpg">  <h2>GIFs</h2>  <p>GIFs are good for animations.</p>  <img src="images/mochi.gif">  <h2>PNGs</h2>  <p>PNGs are good for diagrams and icons.</p>  <img src="images/mochi.png">  <h2>SVGs</h2>  <p>SVGs are <em>amazing</em>. Use them wherever you can.</p>  <img src="images/mochi.svg">  <!-- In JPGs section -->  <img src="images/mochi.jpg" width="75">  <!-- In GIFs section -->  <img src="images/mochi.gif" width="75">  <!-- In PNGs section -->  <img src="images/mochi.png" width="75">  <!-- In JPGs section -->  <img src="images/mochi.jpg" width="75" alt="A mochi ball in a bubble">  <!-- In GIFs section -->  <img src="images/mochi.gif" width="75" alt="A dancing mochi ball">  <!-- In PNGs section -->  <img src="images/mochi.png" width="75" alt="A mochi ball">  <!-- In SVGs section -->  <img src="images/mochi.svg" alt="A mochi ball with Bézier handles">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/07/12/Article/InternetingIsHard/Chapter1/index/"/>
      <url>/2023/07/12/Article/InternetingIsHard/Chapter1/index/</url>
      
        <content type="html"><![CDATA[  <h2 style="background-color:red">This is a heading</h2>  <p style="background-color:green">This is a paragraph.</p>  <ul>    <li>Add a "ul" element (it stands for unordered list)</li>    <li>Add each item in its own "li" element</li>    <li>They don't need to be in any particular order</li>  </ul>  <ul>    <li>Add a "ul" element (it stands for unordered list)</li>    <li>Add each item in its own "li" element</li>    <li>They don't need to be in any particular order</li>  </ul>  <ol>    <li>Notice the new "ol" element wrapping everything</li>    <li>But, the list item elements are the same</li>    <li>Also note how the numbers increment on their own</li>    <li>You should be noticing things is this precise order, because this is      an ordered list</li>  </ol>  <p> <em>Sometimes</em>, you <strong>need</strong> to <em><strong>draw</strong></em> attention to a particular word or    phrase.</p>  <p>Regards,<br>    The Authors</p>  <hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/10/hello-world/"/>
      <url>/2023/07/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>线程相关</title>
      <link href="/2020/02/17/Article/UndergraduateCourse/2020-02-17-%E5%85%B3%E4%BA%8E%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2020/02/17/Article/UndergraduateCourse/2020-02-17-%E5%85%B3%E4%BA%8E%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<hr><p>目录</p><ul><li>CPU</li><li>核心 </li><li>超线程技术</li><li>进程</li><li>线程 </li><li>并行与并行</li><li>进程与线程的区别</li><li>操作系统如何切换进程</li><li>多线程中的概念</li><li>守护进程概念</li></ul><hr><h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><p>一个冯·诺伊曼结构的计算机主要硬件有主板，<strong>CPU</strong>，内存，外存，显卡，网卡，声卡，电源，键盘，鼠标，显示器等<br><img src="https://upload-images.jianshu.io/upload_images/19956444-a9591b27b6c573c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"><br>CPU是一块超大规模的集成电路，h是计算机的运算核心和控制核心。<br>由三大部分组成运算器，寄存器，寄存器。<br>CPU的个数很容易得到，多CPU通过主板上的总线进行连接。</p><h1 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h1><p><strong>核心</strong>又称内核（后文在习惯上讲核心称为内核），是CPU的组成部分，用来完成所有的计算，储存等任务，由单晶硅制成</p><h1 id="超线程技术"><a href="#超线程技术" class="headerlink" title="超线程技术"></a>超线程技术</h1><blockquote><p>这里需要知道的是在一个CPU中可能存在多个核心，这些核心是相对独立的CPU核心单元组</p></blockquote><p>而<strong>超线程技术</strong>则是利用代码手段在一个物理核上模拟两个逻辑核，两个逻辑核会有各自独立的寄存器和APIC，但是共享物理核的执行资源<br><img src="https://upload-images.jianshu.io/upload_images/19956444-58b42f564cf26686.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="i7-9750H"><br>可以看到这一个CPU是只有六个物理内核，但是由于超线程技术OS认为它有12个内核</p><h1 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h1><p><strong>进程</strong>是OS进行资源（CPU，内存，磁盘，IO，带宽等）分配的最小单位</p><ul><li>进程的特征：<ul><li>动态性：进程是程序的一次执行过程，是临时的，有生命期的，是动态产生，动态消亡的；</li><li>并发性：任何进程都可以同其他进程一起并发执行；</li><li>独立性：进程是系统进行资源分配和调度的一个独立单位</li><li>结构性：进程由程序、数据和进程控制块三部分组成。</li></ul></li></ul><h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><blockquote><p>值得一提的是，在早期的操作系统中并没有线程的概念 ，进程是能拥有资源和独立运行的最小单位，也是程序执行的最小方式。任务调度采用的是时间片轮转的抢占式调度方式，而进程是任务调度的最小单位,每个进程都有各自独立的一块内存,使得各个进程之间内存地址相互隔离。</p></blockquote><p>随着时代改变，由于进程与进程之间消耗过大，不在能满足人们的需要，线程的概念就由此诞生：<br><strong>线程</strong>是程序执行中一个单一的顺序控制流程，是程序执行流的最小单元，是处理器调度和分派的最小单位。</p><h1 id="并发与并行"><a href="#并发与并行" class="headerlink" title="并发与并行"></a>并发与并行</h1><ul><li><strong>并发</strong>：当有多个线程在操作时，且只有一个CPU时（由于只有一个CPU所有它不能同时运行一个以上的线程），所以人们采取的方法是把CPU运行时间分为若干个时间段，将时间段分配给各个线程执行，在一个时间段的线程代码运行时，其他线程处于挂起状，这种方式称为并发。</li><li><strong>并行</strong>当一个系统有一个以上CPU时，则线程的操作有可能并发。当一个CPU执行一个线程时，另一个CPU可以执行另一个线程，两个线程不抢占CPU资源同时进行，这种方式称为并行。</li></ul><p>由于CPU上的线程切换很快，所以并发看起来像是时运行</p><h1 id="进程与线程的区别"><a href="#进程与线程的区别" class="headerlink" title="进程与线程的区别"></a>进程与线程的区别</h1><ul><li>线程是程序执行的最小单位，而进程是操作系统分配资源的最小单位；</li><li>一个进程可以由一个或多个多个线程组成；</li><li>进程之间是相互独立的，而同一进程下的各个线程之间共享程序的内存空间(包括代码段、数据集、堆等)及一些进程级的资源(如打开文件和信号)；</li><li>线程上下文切换要比进程快得多</li></ul><h1 id="操作系统如何切换进程"><a href="#操作系统如何切换进程" class="headerlink" title="操作系统如何切换进程"></a>操作系统如何切换进程</h1><p>调度选择下一个进程，得到下一个进程的PCB（Process Control Block），把上一个进程的执行现场保存起来，把下一个进程的现场覆盖到CPU对应的寄存器中去。多进程如何交替？如何切换？把上一个进程的执行现场保存起来，把当前CPU中的寄存器信息等保存到上一个进程的PCB中，把选好的要执行的进程（由进程调度确定）的PCB中的各寄存器信息恢复到当前CPU的寄存器中。</p><h1 id="多进程中的概念"><a href="#多进程中的概念" class="headerlink" title="多进程中的概念"></a>多进程中的概念</h1><p>由于在同一时间只能运行一个线程，在多线程环境下线程的抢占式运行容易出现<strong>线程安全</strong>问题<br>人们因此想出了<strong>互斥机制</strong>来解决线程不安全的问题</p><p>而互斥机制的实现是通过<strong>互斥锁</strong>实现的，基本步骤为：</p><ol><li>加锁</li><li>执行临界区代码</li><li>释放锁</li></ol><blockquote><p>互斥锁又叫<strong>挂起等待锁</strong>，当线程取锁失败就会使其进入系统的等待队列中</p></blockquote><p><strong>死锁</strong>在多道程序环境中，多个进程可以竞争有限数量的资源。当一个进程申请资源时，如果这时没有可用资源，那么这个进程进入等待状态。有时，如果所申请的资源被其他等待进程占有，那么该等待进程有可能再也无法改变状态。在代码中的体现为一个进程重复加锁。</p><h1 id="守护进程概念"><a href="#守护进程概念" class="headerlink" title="守护进程概念"></a>守护进程概念</h1><blockquote><p>守护进程(Deamon)是运行在后台的一种特殊进程,是进程的一种。它在后台运行并且不受任何终端控制,独立于控制终端并且周期性地执行某种任务或等待处理某些发生的事件，常常在系统引导装入时启动，在系统关闭时停止。</p></blockquote><p>代码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;pthread.h&gt;</span><br><span class="line"></span><br><span class="line">#define THRAD_NUM 2</span><br><span class="line"></span><br><span class="line">pthread_mutex_t mutex;</span><br><span class="line"></span><br><span class="line">int g_count = 0;</span><br><span class="line"></span><br><span class="line">void* ThreadEntry(void* arg){</span><br><span class="line">(void)arg;</span><br><span class="line">int i;</span><br><span class="line">for(i=0;i&lt;10;i++){</span><br><span class="line">//如果锁已经被其他线程获取到了，当线程在想获取，就会在lock 函数阻塞</span><br><span class="line"></span><br><span class="line">pthread_mutex_lock(&amp;mutex);//上锁</span><br><span class="line">printf("%d这是新线程输出\n",g_count);</span><br><span class="line">g_count++;</span><br><span class="line">pthread_mutex_unlock(&amp;mutex); //开锁</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">return NULL; </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">int main(){</span><br><span class="line">pthread_t tid[THRAD_NUM];//线程ID</span><br><span class="line"></span><br><span class="line">pthread_mutex_init(&amp;mutex,NULL);//互斥锁初始化</span><br><span class="line"></span><br><span class="line">int i;</span><br><span class="line">for(i=0;i&lt;THRAD_NUM;i++) {</span><br><span class="line">pthread_create(&amp;tid[i], NULL, ThreadEntry, NULL);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">for(i=0;i&lt;10;i++){</span><br><span class="line">printf("%d这是主线程输出\n",g_count);</span><br><span class="line">g_count++;</span><br><span class="line">} </span><br><span class="line"></span><br><span class="line">for (i = 0; i &lt; THRAD_NUM; ++i) {  //释放新线程</span><br><span class="line">pthread_join(tid[i], NULL);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">printf("%d", g_count);</span><br><span class="line"> </span><br><span class="line">//pthread_mutex_destory(&amp;mutex);//互斥锁释放函数   ????这个函数用不了我也不知道什么情况 </span><br><span class="line"> </span><br><span class="line">return 0;</span><br><span class="line">} </span><br></pre></td></tr></tbody></table></figure><p>程序截图<br><img src="https://upload-images.jianshu.io/upload_images/19956444-8e91d236a7fb51e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Lunix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>位运算符</title>
      <link href="/2020/02/10/Article/UndergraduateCourse/2020-02-10-%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2020/02/10/Article/UndergraduateCourse/2020-02-10-%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h1><hr><p>位操作是程序设计钟对位模式安危或二进制数的一元和二元操作</p><p><strong>关于单目，双目，三目运算符的区别</strong></p><blockquote><p><strong>单目运算符</strong>是指运算所需变量为一个的运算符，即在运算中只有一个操作数，又叫<strong>一元运算符</strong></p></blockquote><blockquote><p><strong>双目运算符</strong>就是只有两个操作数</p></blockquote><blockquote><p><strong>三目运算符</strong>有三个操作数，目前只有一个条件运算符<code>?</code>，比如<code>a?b;c</code>，当a的值为真时结果是b，否则结果是c。</p></blockquote><p>因为在现代架构中，位运算的运算速度通常与加法运算相同，但是仍然快于乘法，所以可以用来进行优化2的n次幂</p><hr><p>C语言中一共有六种位运算符</p><ol><li><code>&amp;</code>按位与</li><li><code>|</code>按位或</li><li><code>^</code>按位异或</li><li><code>~</code>取反</li><li><code>&lt;&lt;</code>左移</li><li><code>&gt;&gt;</code>右移</li></ol><hr><h3 id="按位与运算-amp-ensp-amp"><a href="#按位与运算-amp-ensp-amp" class="headerlink" title="按位与运算     &amp;ensp;   &amp;"></a>按位与运算     &amp;ensp;   <strong><code>&amp;</code></strong></h3><p>按位与运算符<code>&amp;</code>是双目运算符，其功能是参与运算的两数各对应的二进位相与，只有对应两个二进位均为1时，结果位才为1，否则位0.参与运算的数以补码的方式出现</p><blockquote><p>9&amp;5可写算式如下： 00001001 (9的二进制补码)&amp;00000101 (5的二进制补码) 00000001 (1的二进制补码)可见9&amp;5=1。 </p></blockquote><blockquote><p><code> c=a&amp;b;</code></p></blockquote><h3 id="按位或运算-amp-ensp"><a href="#按位或运算-amp-ensp" class="headerlink" title="按位或运算 &amp;ensp;  |"></a>按位或运算 &amp;ensp;  <strong><code>|</code></strong></h3><p>按位或运算符<code>|</code>是双目运算符。 其功能是参与运算的两数各对应的二进位相或。只要对应的二个二进位有一个为1时，结果位就为1。参与运算的两个数均以补码出现</p><blockquote><p>9&amp;5可写算式如下： 00001001 (9的二进制补码)&amp;00000101 (5的二进制补码) 00000001 (1的二进制补码)可见9&amp;5=1。 按位与运算通常用来对某些位清0或保留某些位。例如把a 的高八位清 0 ， 保留低八位， 可作 a&amp;255 运算 ( 255 的二进制数为11111111)</p></blockquote><blockquote><p><code>a|255;</code></p></blockquote><h3 id="按位异或运算-amp-ensp"><a href="#按位异或运算-amp-ensp" class="headerlink" title="按位异或运算 &amp;ensp;  ^"></a>按位异或运算 &amp;ensp;  <strong><code>^</code></strong></h3><p>按位异或运算符<code>^</code>是双目运算符。 其功能是参与运算的两数各对应的二进位相异或，当两对应的二进位相异时，结果为1。<br>参与运算数仍以补码出现。</p><blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">9^5</span><br><span class="line"> 00001001</span><br><span class="line"> ^</span><br><span class="line"> 00000101</span><br><span class="line">&gt;=00001100</span><br></pre></td></tr></tbody></table></figure></blockquote><h3 id="求反运算-amp-ensp"><a href="#求反运算-amp-ensp" class="headerlink" title="求反运算 &amp;ensp;  ~"></a>求反运算 &amp;ensp;  <strong><code>~</code></strong></h3><p>求反运算符<code>～</code>为单目运算符，具有右结合性。 其功能是对参与运算的数的各二进位按位求反。</p><blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;~9</span><br><span class="line">&gt;~(1001)</span><br><span class="line"> 0110</span><br></pre></td></tr></tbody></table></figure></blockquote><h3 id="左移运算-amp-ensp-lt-lt"><a href="#左移运算-amp-ensp-lt-lt" class="headerlink" title="左移运算 &amp;ensp;  <<"></a>左移运算 &amp;ensp;  <strong><code>&lt;&lt;</code></strong></h3><p>左移运算符<code>&lt;&lt;</code>是双目运算符。左移n位就是乘以2的n次方。 其功能把<code>&lt;&lt;</code>左边的运算数的各二进位全部左移若干位，由<code>&lt;&lt;</code>右边的数指定移动的位数，高位丢弃，低位补0</p><h3 id="右移运算-amp-ensp-gt-gt"><a href="#右移运算-amp-ensp-gt-gt" class="headerlink" title="右移运算 &amp;ensp;  >>"></a>右移运算 &amp;ensp;  <strong><code>&gt;&gt;</code></strong></h3><p>右移运算符<code>&gt;&gt;</code>是双目运算符。右移n位就是除以2的n次方</p><p>其功能是把<code>&gt;&gt;</code>左边的运算数的各二进位全部右移若干位，<code>&gt;&gt;</code>右边的数指定移动的位数。</p><blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;x&gt;&gt;1;//相当于x/=2</span><br><span class="line">&gt;x&lt;&lt;1;//相当于x*=2</span><br><span class="line">&gt;x&gt;&gt;2;//x/=4</span><br><span class="line">&gt;x&lt;&lt;2;//x*=4</span><br><span class="line">&gt;x&gt;&gt;3;//x/=8</span><br><span class="line">&gt;x&lt;&lt;3;//x*=8</span><br></pre></td></tr></tbody></table></figure></blockquote><hr><p><a href="https://baike.baidu.com/item/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6/2786163?fr=aladdin">以上内容均转自百度百科</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Lunix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宏的学习</title>
      <link href="/2019/11/14/Article/UndergraduateCourse/2019-11-14-%E5%AE%8F/"/>
      <url>/2019/11/14/Article/UndergraduateCourse/2019-11-14-%E5%AE%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="宏的学习"><a href="#宏的学习" class="headerlink" title="宏的学习"></a>宏的学习</h1><hr><h2 id="宏的基本概念"><a href="#宏的基本概念" class="headerlink" title="宏的基本概念"></a>宏的基本概念</h2><p>   #define命令是C语言中的一个宏定义命令，它用来将一个标识符定义为一个字符串，该标识符被称为宏名，被定义的字符串称为替换文本。该命令有两种格式：一种是简单的宏定义，另一种是带参数的宏定义。</p><ul><li><p>(1)   无参数宏定义：<br>  #define   &lt;宏名&gt;　　&lt;字符串&gt;<br>  例：    #define PI 3.1415926</p></li><li><p>(2) 带参数的宏定义<br>     #define &lt;宏名&gt; (&lt;参数表&gt;) &lt;宏体&gt;<br>  例： #define A(x) x</p></li></ul><p>+（3）用于条件编译：<br>    （常用形式） #ifndef _AAA_H #define _AAA_H</p><p>找到了一篇讲的很好的<a href="https://www.cnblogs.com/bytebee/p/8205450.html">宏定义#define的用法</a>的文章</p><h2 id="宏定义中容易出错的问题"><a href="#宏定义中容易出错的问题" class="headerlink" title="宏定义中容易出错的问题"></a>宏定义中容易出错的问题</h2><ul><li>标识符的命名必须合法</li><li>标识符应当有足够清楚的名字以方便阅读代码</li><li>宏所带表的是宏体中的整体，而不是宏体所计算出的值，所以我们应该注意在编译之后所出现的运算顺序问题，一般解决办法是打括号<br>*但是当括号的数量过大，就容易多或少（尤其是没有自动检查的IDE）</li></ul><h3 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h3><pre><code>#define N(x,y) ( (x/y)*y ) //第一三题同一解#define M(x,y) ( ((x/y)+1)*y )//第二四题同一解</code></pre><p>确实没有知道在本题中优化算法可以用在哪，算2^n倒是可以用二分法</p>]]></content>
      
      
      
        <tags>
            
            <tag> Lunix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lunix常用命令，操作</title>
      <link href="/2019/11/12/Article/UndergraduateCourse/2019-11-12-Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/11/12/Article/UndergraduateCourse/2019-11-12-Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Lunix常用命令，操作"><a href="#Lunix常用命令，操作" class="headerlink" title="Lunix常用命令，操作"></a>Lunix常用命令，操作</h1><hr><h2 id="1-创建文件夹"><a href="#1-创建文件夹" class="headerlink" title="1.创建文件夹"></a>1.创建文件夹</h2><ul><li>单个文件夹创建<br>  <code>mkdirs  单个文件夹名称</code></li><li>多个文件夹创建<br>  <code>mkdirs  文件夹1/文件夹2/......</code></li><li>在指定文件夹1中创建一个文件夹2<br>  <code>mkdirs /文件夹1/文件夹2 </code></li></ul><h2 id="2-新建文件"><a href="#2-新建文件" class="headerlink" title="2.新建文件"></a>2.新建文件</h2><p>  <code>vi main.cpp</code></p><h2 id="3-复制文件"><a href="#3-复制文件" class="headerlink" title="3.复制文件"></a>3.复制文件</h2><p>  将main.cpp的内容复制到code.cpp<br>  <code>cp main.cpp code.cpp</code></p><h2 id="4-移动文件"><a href="#4-移动文件" class="headerlink" title="4.移动文件"></a>4.移动文件</h2><p>  将文件mian.cpp移动到文件夹work中<br> <code>mv mian.cpp work</code></p><h2 id="5-删除文件"><a href="#5-删除文件" class="headerlink" title="5.删除文件"></a>5.删除文件</h2><p>  删除文件code.cpp，参数-f表示强制删除<br>  <code>rm code.cpp</code><br>  <code>rm -f code.cpp</code></p><h2 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h2><p>  删除文件夹work，参数-r表示递归删除，-f表示强制删除.<br>  若文件夹不为空则不能直接使用rm命令，而递归删除指的是删除目录下所有文件。<br>  <code>rm -rf work </code></p><p>除此之外的   <a href="https://blog.csdn.net/qq_23329167/article/details/83856430">常用命令</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Lunix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从源代码安装gcc</title>
      <link href="/2019/11/12/Article/UndergraduateCourse/2019-11-12-%E4%BB%8E%E6%BA%90%E4%BB%A3%E7%A0%81%E5%AE%89%E8%A3%85gcc/"/>
      <url>/2019/11/12/Article/UndergraduateCourse/2019-11-12-%E4%BB%8E%E6%BA%90%E4%BB%A3%E7%A0%81%E5%AE%89%E8%A3%85gcc/</url>
      
        <content type="html"><![CDATA[<h1 id="从源代码安装gcc"><a href="#从源代码安装gcc" class="headerlink" title="从源代码安装gcc"></a>从源代码安装gcc</h1><hr><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>1.下载</p><p>2.解压缩</p><p>3.建立目标目录</p><p>4.配置</p><p>5.编译</p><p>6.安装</p><p>7.终端命令设置</p><hr><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h3><p>到<a href="http://gcc.gnu.org/">GCC官网</a>下载资源。一般可以下载到两种形式的资源：gcc-9.2.0.tar.gz和gcc-9.2.0.bz2</p><h3 id="2-解压缩"><a href="#2-解压缩" class="headerlink" title="2.解压缩"></a>2.解压缩</h3><p>+若后缀为tar.bz2用tar -jxvf命令<br> </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -jxvf  gcc-9.2.0.tar.bz2</span><br></pre></td></tr></tbody></table></figure><br>+若后缀为tar.zxvf用tar zxvf命令<br>  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf gcc-9.2.0.tar.gz</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="3-建立目标目录"><a href="#3-建立目标目录" class="headerlink" title="3.建立目标目录"></a>3.建立目标目录</h3><p>目标目录用{objdir}表示，用来存放编译后生成的文件。<br>可以建立一个/usr/local/gcc-9.2.0的目标目录并进入。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> mkdir /usr/local/gcc-9.2.0</span><br><span class="line">cd /usr/local/gcc-9.2.0        //使生成文件都到目标目录中               </span><br></pre></td></tr></tbody></table></figure><h3 id="4-配置"><a href="#4-配置" class="headerlink" title="4.配置"></a>4.配置</h3><p>配置是通过执行{srcdir}下的configure来完成的。${destdir}代表你想要安装的目录：<br> {srcdir}/configure –prefix={destdir} [其它选项]</p><blockquote><p>linux, configure –prefix=/”的作用是：编译的时候用来指定程序存放路径</p></blockquote><p> <del>太抽象了还是直接上操作吧</del></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configure --prefix=/usr/local/gcc-9.2.0</span><br></pre></td></tr></tbody></table></figure><h3 id="5-编译"><a href="#5-编译" class="headerlink" title="5. 编译"></a>5. 编译</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% make</span><br></pre></td></tr></tbody></table></figure><p>因为现在大多数cpu是多核心，可以采用<code>% make -j4</code>来加快编译速度，具体数字4根据电脑情况决定。</p><h3 id="6-安装"><a href="#6-安装" class="headerlink" title="6.安装"></a>6.安装</h3><p>直接</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% make install</span><br></pre></td></tr></tbody></table></figure><p><em>然后就大功搞成了！！！！！</em></p><h3 id="7-任务截图"><a href="#7-任务截图" class="headerlink" title="7.任务截图"></a>7.任务截图</h3><p><img src="https://upload-images.jianshu.io/upload_images/19956444-25f4c71fe4f66554.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2019-11-17 22-28-00 的屏幕截图.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Lunix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lunix常用命令，操作</title>
      <link href="/2019/11/12/Article/UndergraduateCourse/2020-12-15-CSDN_markdown%E7%BC%96%E8%BE%91%E5%99%A8_%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/11/12/Article/UndergraduateCourse/2020-12-15-CSDN_markdown%E7%BC%96%E8%BE%91%E5%99%A8_%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>﻿@<a href="%E8%BF%99%E9%87%8C%E5%86%99%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%AE%E5%BD%95%E6%A0%87%E9%A2%98">TOC</a></p><h1 id="欢迎使用Markdown编辑器"><a href="#欢迎使用Markdown编辑器" class="headerlink" title="欢迎使用Markdown编辑器"></a>欢迎使用Markdown编辑器</h1><p>你好！ 这是你第一次使用 <strong>Markdown编辑器</strong> 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。</p><h2 id="新的改变"><a href="#新的改变" class="headerlink" title="新的改变"></a>新的改变</h2><p>我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：</p><ol><li><strong>全新的界面设计</strong> ，将会带来全新的写作体验；</li><li>在创作中心设置你喜爱的代码高亮样式，Markdown <strong>将代码片显示选择的高亮样式</strong> 进行展示；</li><li>增加了 <strong>图片拖拽</strong> 功能，你可以将本地的图片直接拖拽到编辑区域直接展示；</li><li>全新的 <strong>KaTeX数学公式</strong> 语法；</li><li>增加了支持<strong>甘特图的mermaid语法[^1]</strong> 功能；</li><li>增加了 <strong>多屏幕编辑</strong> Markdown文章功能；</li><li>增加了 <strong>焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置</strong> 等功能，功能按钮位于编辑区域与预览区域中间；</li><li>增加了 <strong>检查列表</strong> 功能。<br>[^1]: <a href="https://mermaidjs.github.io/">mermaid语法说明</a></li></ol><h2 id="功能快捷键"><a href="#功能快捷键" class="headerlink" title="功能快捷键"></a>功能快捷键</h2><p>撤销：<kbd>Ctrl/Command</kbd> + <kbd>Z</kbd><br>重做：<kbd>Ctrl/Command</kbd> + <kbd>Y</kbd><br>加粗：<kbd>Ctrl/Command</kbd> + <kbd>B</kbd><br>斜体：<kbd>Ctrl/Command</kbd> + <kbd>I</kbd><br>标题：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd><br>无序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd><br>有序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd><br>检查列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd><br>插入代码：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd><br>插入链接：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>L</kbd><br>插入图片：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>G</kbd><br>查找：<kbd>Ctrl/Command</kbd> + <kbd>F</kbd><br>替换：<kbd>Ctrl/Command</kbd> + <kbd>G</kbd></p><h2 id="合理的创建标题，有助于目录的生成"><a href="#合理的创建标题，有助于目录的生成" class="headerlink" title="合理的创建标题，有助于目录的生成"></a>合理的创建标题，有助于目录的生成</h2><p>直接输入1次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成1级标题。<br>输入2次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成2级标题。<br>以此类推，我们支持6级标题。有助于使用<code>TOC</code>语法后生成一个完美的目录。</p><h2 id="如何改变文本的样式"><a href="#如何改变文本的样式" class="headerlink" title="如何改变文本的样式"></a>如何改变文本的样式</h2><p><em>强调文本</em> <em>强调文本</em></p><p><strong>加粗文本</strong> <strong>加粗文本</strong></p><p>==标记文本==</p><p><del>删除文本</del></p><blockquote><p>引用文本</p></blockquote><p>H<del>2</del>O is是液体。</p><p>2^10^ 运算结果是 1024.</p><h2 id="插入链接与图片"><a href="#插入链接与图片" class="headerlink" title="插入链接与图片"></a>插入链接与图片</h2><p>链接: <a href="https://www.csdn.net/">link</a>.</p><p>图片: <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw" alt="Alt"></p><p>带尺寸的图片: ![Alt](<a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw">https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw</a> =30x30)</p><p>居中的图片: <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center" alt="Alt"></p><p>居中并且带尺寸的图片: ![Alt](<a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center">https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center</a> =30x30)</p><p>当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。</p><h2 id="如何插入一段漂亮的代码片"><a href="#如何插入一段漂亮的代码片" class="headerlink" title="如何插入一段漂亮的代码片"></a>如何插入一段漂亮的代码片</h2><p>去<a href="https://mp.csdn.net/console/configBlog">博客设置</a>页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 <code>代码片</code>.</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// An highlighted block</span></span><br><span class="line"><span class="keyword">var</span> foo = <span class="string">'bar'</span>;</span><br></pre></td></tr></tbody></table></figure><h2 id="生成一个适合你的列表"><a href="#生成一个适合你的列表" class="headerlink" title="生成一个适合你的列表"></a>生成一个适合你的列表</h2><ul><li>项目<ul><li>项目<ul><li>项目</li></ul></li></ul></li></ul><ol><li>项目1</li><li>项目2</li><li>项目3</li></ol><ul><li><input disabled="" type="checkbox"> 计划任务</li><li><input checked="" disabled="" type="checkbox"> 完成任务</li></ul><h2 id="创建一个表格"><a href="#创建一个表格" class="headerlink" title="创建一个表格"></a>创建一个表格</h2><p>一个简单的表格是这么创建的：</p><table><thead><tr><th>项目</th><th>Value</th></tr></thead><tbody><tr><td>电脑</td><td>$1600</td></tr><tr><td>手机</td><td>$12</td></tr><tr><td>导管</td><td>$1</td></tr></tbody></table><h3 id="设定内容居中、居左、居右"><a href="#设定内容居中、居左、居右" class="headerlink" title="设定内容居中、居左、居右"></a>设定内容居中、居左、居右</h3><p>使用<code>:---------:</code>居中<br>使用<code>:----------</code>居左<br>使用<code>----------:</code>居右</p><table><thead><tr><th align="center">第一列</th><th align="right">第二列</th><th align="left">第三列</th></tr></thead><tbody><tr><td align="center">第一列文本居中</td><td align="right">第二列文本居右</td><td align="left">第三列文本居左</td></tr></tbody></table><h3 id="SmartyPants"><a href="#SmartyPants" class="headerlink" title="SmartyPants"></a>SmartyPants</h3><p>SmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：</p><table><thead><tr><th>TYPE</th><th>ASCII</th><th>HTML</th></tr></thead><tbody><tr><td>Single backticks</td><td><code>'Isn't this fun?'</code></td><td>‘Isn’t this fun?’</td></tr><tr><td>Quotes</td><td><code>"Isn't this fun?"</code></td><td>“Isn’t this fun?”</td></tr><tr><td>Dashes</td><td><code>-- is en-dash, --- is em-dash</code></td><td>– is en-dash, — is em-dash</td></tr></tbody></table><h2 id="创建一个自定义列表"><a href="#创建一个自定义列表" class="headerlink" title="创建一个自定义列表"></a>创建一个自定义列表</h2><dl><dt>Markdown</dt><dd>Text-to-HTML conversion tool</dd></dl><dl><dt>Authors<br>:  John</dt><dd>Luke</dd></dl><h2 id="如何创建一个注脚"><a href="#如何创建一个注脚" class="headerlink" title="如何创建一个注脚"></a>如何创建一个注脚</h2><p>一个具有注脚的文本。<a href="%E6%B3%A8%E8%84%9A%E7%9A%84%E8%A7%A3%E9%87%8A">^2</a></p><h2 id="注释也是必不可少的"><a href="#注释也是必不可少的" class="headerlink" title="注释也是必不可少的"></a>注释也是必不可少的</h2><p>Markdown将文本转换为 HTML。</p><p>*[HTML]:   超文本标记语言</p><h2 id="KaTeX数学公式"><a href="#KaTeX数学公式" class="headerlink" title="KaTeX数学公式"></a>KaTeX数学公式</h2><p>您可以使用渲染LaTeX数学表达式 <a href="https://khan.github.io/KaTeX/">KaTeX</a>:</p><p>Gamma公式展示 $\Gamma(n) = (n-1)!\quad\forall<br>n\in\mathbb N$ 是通过欧拉积分</p><p>$$<br>\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt,.<br>$$</p><blockquote><p>你可以找到更多关于的信息 <strong>LaTeX</strong> 数学表达式<a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">here</a>.</p></blockquote><h2 id="新的甘特图功能，丰富你的文章"><a href="#新的甘特图功能，丰富你的文章" class="headerlink" title="新的甘特图功能，丰富你的文章"></a>新的甘特图功能，丰富你的文章</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title Adding GANTT diagram functionality to mermaid</span><br><span class="line">        section 现有任务</span><br><span class="line">        已完成               :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        进行中               :active,  des2, 2014-01-09, 3d</span><br><span class="line">        计划一               :         des3, after des2, 5d</span><br><span class="line">        计划二               :         des4, after des3, 5d</span><br></pre></td></tr></tbody></table></figure><ul><li>关于 <strong>甘特图</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</li></ul><h2 id="UML-图表"><a href="#UML-图表" class="headerlink" title="UML 图表"></a>UML 图表</h2><p>可以使用UML图表进行渲染。 <a href="https://mermaidjs.github.io/">Mermaid</a>. 例如下面产生的一个序列图：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?</span><br><span class="line">李四--&gt;&gt;王五: 你最近怎么样，王五？</span><br><span class="line">李四--x 张三: 我很好，谢谢!</span><br><span class="line">李四-x 王五: 我很好，谢谢!</span><br><span class="line">Note right of 王五: 李四想了很长时间, 文字太长了&lt;br/&gt;不适合放在一行.</span><br><span class="line"></span><br><span class="line">李四--&gt;&gt;张三: 打量着王五...</span><br><span class="line">张三-&gt;&gt;王五: 很好... 王五, 你怎么样?</span><br></pre></td></tr></tbody></table></figure><p>这将产生一个流程图。:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[长方形] -- 链接 --&gt; B((圆))</span><br><span class="line">A --&gt; C(圆角长方形)</span><br><span class="line">B --&gt; D{菱形}</span><br><span class="line">C --&gt; D</span><br></pre></td></tr></tbody></table></figure><ul><li>关于 <strong>Mermaid</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</li></ul><h2 id="FLowchart流程图"><a href="#FLowchart流程图" class="headerlink" title="FLowchart流程图"></a>FLowchart流程图</h2><p>我们依旧会支持flowchart的流程图：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">flowchat</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">op=&gt;operation: 我的操作</span><br><span class="line">cond=&gt;condition: 确认？</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></tbody></table></figure><ul><li>关于 <strong>Flowchart流程图</strong> 语法，参考 <a href="http://adrai.github.io/flowchart.js/">这儿</a>.</li></ul><h2 id="导出与导入"><a href="#导出与导入" class="headerlink" title="导出与导入"></a>导出与导入</h2><h3 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h3><p>如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 <strong>文章导出</strong> ，生成一个.md文件或者.html文件进行本地保存。</p><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>如果你想加载一篇你写过的.md文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，<br>继续你的创作。</p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从源代码安装gcc</title>
      <link href="/2019/11/12/Article/UndergraduateCourse/2021-07-26-%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E6%B1%87%E6%80%BB/"/>
      <url>/2019/11/12/Article/UndergraduateCourse/2021-07-26-%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="图像处理基本方式"><a href="#图像处理基本方式" class="headerlink" title="图像处理基本方式"></a>图像处理基本方式</h1><hr><p>目录：</p><ol><li><p>基础知识。</p></li><li><p>图像增强</p></li><li><p>直方图均衡化</p></li><li></li><li></li></ol><hr><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ol><li><p>图像处理的过程</p><p><img src="C:\Users\35547\AppData\Roaming\Typora\typora-user-images\1627264029870.png" alt="1627264029870"></p></li><li><p>对比度：是指一幅图像中灰度反差的大小。对比度=最大亮度/最小亮度</p></li><li><p>图像处理两大类：空间域、变化域</p></li></ol><h2 id="图像增强"><a href="#图像增强" class="headerlink" title="图像增强"></a>图像增强</h2><h3 id="反转变换"><a href="#反转变换" class="headerlink" title="反转变换"></a>反转变换</h3><h3 id="对数变换"><a href="#对数变换" class="headerlink" title="对数变换"></a>对数变换</h3><ol><li><p>应用场景</p><ul><li><p>有时原图的动态范围太大，超出某些显示设备的允许 动态范围，如直接使用原图，则一部分细节可能丢失</p></li><li><p>解决办法是对原图进行灰度压缩，如对数变换</p></li></ul></li></ol><h3 id="幂次变换"><a href="#幂次变换" class="headerlink" title="幂次变换"></a>幂次变换</h3><ol><li><p>应用场景</p><ul><li><p>c和 g 是正常数</p></li><li><p>g &lt; 1 提高灰度级，在正比函数上方，使图像变亮</p></li><li><p>g &gt; 1 降低灰度级，在正比函数下方，使图像变暗</p></li><li><p>在尽量不破坏高亮的情况下，显露出暗部细节（个人认为直方图变换更好用，此方法适用于亮的地方较多的图片），变暗同理</p></li></ul></li></ol><h3 id="分段线性变换"><a href="#分段线性变换" class="headerlink" title="分段线性变换"></a>分段线性变换</h3><h3 id="灰度级切片"><a href="#灰度级切片" class="headerlink" title="灰度级切片"></a>灰度级切片</h3><h3 id="位平面切片"><a href="#位平面切片" class="headerlink" title="位平面切片"></a>位平面切片</h3><h3 id="代数运算"><a href="#代数运算" class="headerlink" title="代数运算"></a>代数运算</h3><ol><li><p>加法</p><ul><li>去除叠加性噪声</li><li>生成图像叠加效果</li></ul></li><li><p>减法</p><ul><li>显示两幅图像的差异，检测同一场景两 幅图像之间的变化</li><li>去除不需要的叠加性图案</li><li>图像分割：如分割运动的车辆，减法去 掉静止部分，剩余的是运动元素和噪声</li></ul></li><li><p>乘法</p><ul><li>图像的局部显示</li></ul></li><li><p>非</p><ul><li><p>获得一个阴图像</p></li><li><p>获得一个子图像的补图像</p></li></ul></li><li><p>与</p><ul><li>求两个子图像的相交子图</li></ul></li><li><p>或</p><ul><li>合并子图像</li></ul></li><li><p>异或</p><ul><li>获得相交子图像</li></ul></li></ol><h3 id="直方图运算"><a href="#直方图运算" class="headerlink" title="直方图运算"></a>直方图运算</h3><h4 id="直方图均衡化"><a href="#直方图均衡化" class="headerlink" title="直方图均衡化"></a>直方图均衡化</h4><ol><li><p>应用场景：基本思想是把原始图的直方图变换为均匀分布的形式，这样就增加了像素灰度值的动态<br>范围，从而达到增强图像整体对比度的效果</p></li><li><p>使用举例</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img = sensor.snapshot().histeq()</span><br></pre></td></tr></tbody></table></figure></li></ol><h3 id="空间域图像增强"><a href="#空间域图像增强" class="headerlink" title="空间域图像增强"></a>空间域图像增强</h3><h4 id="平滑空间滤波器"><a href="#平滑空间滤波器" class="headerlink" title="平滑空间滤波器"></a>平滑空间滤波器</h4><ol><li><p>作用：</p><ol><li>模糊处理，去除图像中一些不重要的细节</li><li>减小噪声</li></ol></li><li><p>分类</p><ol><li>线性滤波器<ul><li>均值滤波器</li></ul></li><li>非线性滤波器<ul><li>最大值滤波器</li><li>中值滤波器</li><li>最小值滤波器</li></ul></li></ol></li></ol><h5 id="均值滤波器"><a href="#均值滤波器" class="headerlink" title="均值滤波器"></a>均值滤波器</h5><ol><li><p>作用场景</p><ul><li>减小图像灰度的“尖锐”变化，减小噪声</li><li>由于图像边缘是由图像灰度尖锐变化 引起的，所以也存在边缘模糊的问题</li></ul></li><li><p>使用举例</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img.mean(1) #1为核的大小3*3</span><br></pre></td></tr></tbody></table></figure></li></ol><h5 id="中值滤波器"><a href="#中值滤波器" class="headerlink" title="中值滤波器"></a>中值滤波器</h5><h5 id="最大值滤波器"><a href="#最大值滤波器" class="headerlink" title="最大值滤波器"></a>最大值滤波器</h5><h5 id="最小值滤波器"><a href="#最小值滤波器" class="headerlink" title="最小值滤波器"></a>最小值滤波器</h5><ol><li><p>作用场景</p><ul><li>用像素领域内的中间值/最大值/最小值代替该像素</li><li>去除噪声/寻找最亮点 /寻找最暗点</li></ul></li><li><p>使用举例</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img.median(1, percentile=0.5) #percenttile是说取数在排序后的位置</span><br></pre></td></tr></tbody></table></figure></li></ol><h4 id="锐化空间滤波器"><a href="#锐化空间滤波器" class="headerlink" title="锐化空间滤波器"></a>锐化空间滤波器</h4><ol><li><p>作用</p><ol><li>突出图像中的细节，增强被模糊了的细节</li><li>印刷中的细微层次强调。弥补扫描对图像的 钝化</li><li>超声探测成像，分辨率低，边缘模糊，通过 锐化来改善</li><li>图像识别中，分割前的边缘提取</li><li>锐化处理恢复过度钝化、暴光不足的图像</li><li>尖端武器的目标识别、定位</li></ol></li><li><p>分类</p><ol><li><p>二阶微分滤波器－拉普拉斯算子</p></li><li><p>一阶微分滤波器－梯度算子</p></li></ol></li></ol><h2 id="图像复原"><a href="#图像复原" class="headerlink" title="图像复原"></a>图像复原</h2><ol><li><p>引起图像退化的原因：成像系统的散焦、成像设备与物体的相对运动、成像器材的固有缺陷、外部干扰等</p></li><li><p>而图像复原技术追求恢 复原始图像的最优估值</p></li><li><p>一些重要的噪声：</p><ul><li><p>高斯噪声</p></li><li><p>瑞利噪声</p></li><li><p>伽马（爱尔兰）噪声</p></li><li><p>指数分布噪声</p></li><li><p>均匀分布噪声</p></li><li><p>脉冲噪声（椒盐噪声）</p></li></ul><blockquote><p>瑞利噪声对于表征远距离成像噪声有用</p><p>伽马分布和指数分布用于表征激光成像噪声</p><p>脉冲噪声用于成像中的短暂停留中，如错误的开关操作</p></blockquote><ul><li>周期噪声：周期噪声是在图像获取中从电力或机 电干扰中产生，周期噪声可以通过频率域滤波显著减 少</li></ul></li><li><p>自适应滤波器</p></li><li><p>图像复原的频率域滤波器</p><ol><li><p>带阻滤波器</p></li><li><p>带通滤波器</p></li><li><p>陷波滤波器</p></li><li><p>最佳陷波滤波器</p></li></ol></li></ol><h2 id="形态学图像处理：膨胀和腐蚀"><a href="#形态学图像处理：膨胀和腐蚀" class="headerlink" title="形态学图像处理：膨胀和腐蚀"></a>形态学图像处理：膨胀和腐蚀</h2><p>产生滤波器作用。</p><p><strong>腐蚀</strong>就是将图像的边缘缩小些。目的是将目标的边缘的“毛刺”踢除掉。作用是消除物体边界点，目标缩小，可以消除小于结构元素的噪声点；</p><p><strong>膨胀</strong>就是将图像的边缘扩大些。目的是将目标的边缘或者是内部的坑填掉。作用是将与物体接触的所有背景点合并到物体中，使目标增大，可添补目标中的空洞。</p><p><strong>开操作</strong>：使图像的轮廓变得光滑，断开狭窄 的间断和消除细的突出物</p><p><strong>闭操作</strong>：同样使图像的轮廓变得光滑，但与 开操作相反，它能消除狭窄的间断和长细的鸿<br>沟，消除小的孔洞，并填补轮廓线中的裂痕</p><h2 id="图像分割"><a href="#图像分割" class="headerlink" title="图像分割"></a>图像分割</h2><ol><li><p>三大类方法</p><ol><li>根据区域间灰度不连续搜寻区域之间的边 界，在<em>间断检测</em>、<em>边缘连接</em>和<em>边界检测</em>介绍</li><li>以像素性质的分布进行阈值处理，在<em>阈值处理</em>介绍</li><li>直接搜寻区域进行分割，在<em>基于区域的分割</em>中介绍</li></ol></li><li><p>间断检测</p><ol><li>点检测</li><li>线检测</li><li>边缘检测</li></ol></li><li><p>边缘连接和边界检测：通过Hough变换进行整体处理</p></li><li><p>图像分割</p><ol><li><p>基础</p></li><li><p>基本全局阈值</p></li><li><p>基本自适应阈值</p></li><li><p>最佳全局和自适应阈值</p></li><li><p>通过边界特性选择阈值</p></li><li><p>基于不同变量的阈值</p></li></ol></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Lunix </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
